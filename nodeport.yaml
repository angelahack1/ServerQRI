apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: server-qri-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server-qri-deployment
      instance: "1"
  template:
    metadata:
      labels:
        app: server-qri-deployment
        instance: "1"
    spec:
      containers:
      - name: server-qri
        image: server-qri:1.0
        env:
        - name: SERVER_QRI_SERVICE_ID
          value: "1"
        ports:
        - containerPort: 3000
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: server-qri-service-1
spec:
  type: NodePort
  selector:
    app: server-qri-deployment
    instance: "1"
  ports:
    - name: http
      protocol: TCP
      port: 31201
      targetPort: 3000
      nodePort: 31201
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: server-qri-service-2
spec:
  type: NodePort
  selector:
    app: server-qri-deployment
    instance: "1"
  ports:
    - name: http
      protocol: TCP
      port: 31202
      targetPort: 3000
      nodePort: 31202
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: server-qri-service-3
spec:
  type: NodePort
  selector:
    app: server-qri-deployment
    instance: "1"
  ports:
    - name: http
      protocol: TCP
      port: 31203
      targetPort: 3000
      nodePort: 31203
---
# server-qri-loadbalancer.yaml
apiVersion: v1
kind: Service
metadata:
  name: server-qri-loadbalancer-1
  namespace: default  # Must match where Ingress looks for it
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 31200       # Must match what Ingress expects
    targetPort: 3000  # Must match your containerPort
  selector:
    app: server-qri-deployment  # Must match your pod labels
